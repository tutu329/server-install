【关于ubuntu系统突然掉显卡/突然无故重启的问题】
    1)突然掉显卡(nvidia-smi报错: unable to determine the device handle for GPU 0000.1A.00.0):
        查看gpu的总线情况lspci | grep NVIDIA
            如果像这样, rev a1结尾为正常, rev ff结尾为错误。     (1a:00.0 VGA compatible controller: NVIDIA Corporation TU102 [GeForce RTX 2080 Ti Rev. A] (rev a1))
        查看gpu id和bus_id的对应关系: nvidia-smi --query-gpu=index,pci.bus_id,uuid --format=csv
        查看报错日志(一般也不需要): sudo nvidia-bug-report.sh
    2)突然无故重启
        a)应该是功率问题，解决方式(gpu.sh):
            sudo nvidia-smi -pm 1 # 设置显卡持久模式
            sudo nvidia-smi -lgc 1400 # 固定显卡频率
            sudo nvidia-smi -pl 200 # 设置显卡最大功率
    3) 1和2的解决手段:
        a)重启
        b)运行llm前，先运行gpu.sh设置持久模式、控制功率、控制频率

【超微4029GR服务器的ipmi的bios配置，目前服务器ipmi的ip为192.168.124.125，用户名为admin，密码为jackseaver79】
1、让商家交货时，确保服务器的bios中设置如下:
    1) 已经打开远程登录ipmi的设置
    2) ipmi的ip最好设置为192.168.124.125这样，也就是和家里的网段前三个数字一致，省的家里机器为了访问同网段的ipmi要改ip
    3) 风扇模式已经设置为优化(optimize)模式
2、ubuntu中安装ipmitool
    安装ipmitool: sudo apt install ipmitool
    浏览器远程登录ipmi(如有问题，要进入服务器bios设置):
        将网线接入服务器的单独的那个impi网口
        浏览器打开192.168.124.125
        用户名为：admin，密码为：jackseaver79
    查看服务器电源情况:
        将网线接入服务器的单独的那个impi网口
        ipmitool -I lanplus -H 192.168.124.125 -U admin -P jackseaver79 sdr type "Power Supply"

【超微4029GR服务器的ubuntu系统安装】
1、显卡驱动
    安装535专用版(tested)，暂不考虑server版
    nvidia-smi后显示: NVDIA-SMI: 535.161.07 Driver Version: 535.161.07, CUDA Version: 12.2

2、安装gcc
    sudo apt update
    sudo apt install g++
    sudo apt install gcc
    sudo apt install make

2、cudatoolkit安装
    https://developer.nvidia.com/cuda-downloads选择runfile(local)
    wget https://developer.download.nvidia.com/compute/cuda/12.4.0/local_installers/cuda_12.4.0_550.54.14_linux.run
    sudo sh cuda_12.4.0_550.54.14_linux.run
        1)等一段时间，选择continue，选择accept
        2)把Driver的选择去掉，然后选择install
    安装完成后: vi .bashrc
        export PATH="/home/tutu/anaconda3/bin:$PATH"
        export LD_LIBRARY_PATH=/usr/local/cuda-12.4/lib64:/usr/local/cuda-12.4/extras/CUPTI/lib64
        export CUDA_HOME=/usr/local/cuda-12.4/bin
        export PATH=$PATH:$LD_LIBRARY_PATH:$CUDA_HOME
    source .bashrc
    nvcc -V
    安装成功

3、安装vllm
    conda create -n v1 python=3.11
    conda activate v1
    pip install torch torchvision torchaudio
    pip install vllm(似乎前面cudatoolkit选择12.4也可以)

4、exfat安装
    安装exfat支持: sudo apt install exfatprogs
    mount移动硬盘: sudo mount -t exfat /dev/sda2 /mnt/disk_1t/
    复制模型文件等

5、安装git
    sudo apt install git
    ssh -T git@github.com, 如果看到Warning: Permanently added 'github.com' ...Permission denied..., 表面可以连接
    sudo apt install git-lfs
    git lfs install
    这样就可以下载了

6、安装frp

7、安装agent用的chrome
    playwright install chrome

8、安装与/home/tutu/server/关联的ftp服务
    安装: sudo apt install vsftpd
    查询状态: service vsftpd status
    sudo service vsftpd start
    sudo service vsftpd restart
    sudo service vsftpd stop

    用户设置（虚拟user，一个linux的user("ftpuser")对应多个vsftp的虚拟user）:
        sudo useradd -d /home/tutu/server -s /sbin/nologin ftpuser  # ftpuser为新增的user，而虚拟用户对应/etc/vsftpd_user_conf/的tutu329等文件
        sudo chmod -Rf 777 /home/tutu/server    # 这一行很关键，不然filezilla上传下载会报错：严重文件传输错误
    conf配置
        sudo vi /etc/vsftpd.conf
        write_enable=YES
        local_enable=YES
        # chroot_local_user最好还是关闭
        local_umask=022 # 这个打开才能上传
        pasv_enable=YES
        pasv_min_port=8020
        pasv_max_port=8025
        pasv_address=116.62.63.204
        allow_writeable_chroot=YES  # 这行很关键，不然就连不上

        注: cat /etc/ftpusers为禁止作为ftp用户的用户列表
    创建虚拟用户
        sudo apt install db-util
        vi login_users (增加第一行: tutu329，第二行密码: jackseaver79)
        sudo db_load -T -t hash -f /home/tutu/login_users /etc/vsftpd_login.db
        sudo chmod 600 /etc/vsftpd_login.db

    配置PAM验证
        sudo vi /etc/pam.d/vsftpd (增加如下两行，其余注释掉:
            auth required /lib/x86_64-linux-gnu/security/pam_userdb.so db=/etc/vsftpd_login
            account required  /lib/x86_64-linux-gnu/security/pam_userdb.so  db=/etc/vsftpd_login
        )
        sudo vi /etc/vsftpd.conf (改为:
            pam_service_name=vsftpd
        )

    创建本地用户映射
        sudo vi /etc/vsftpd.conf (增加:
            guest_enable=YES
            guest_username=ftpuser
        )

    设置用户目录和权限
        sudo chown ftpuser /home/tutu/server/   # 注意这里是ftpuser
        sudo mkdir /etc/vsftpd_user_conf
        sudo vi /etc/vsftpd.conf (增加:
            user_config_dir=/etc/vsftpd_user_conf
        )

    新建某个虚拟user(如tutu329)的配置: 在/etc/vsftpd_user_conf/下创建文本文件tutu329:
        write_enable=YES
        anon_upload_enable=YES
        anon_mkdir_write_enable=YES

        anon_world_readable_only=NO
        anon_upload_enable=YES
        anon_mkdir_write_enable=YES
        anon_other_write_enable=YES
        local_root=/home/tutu/server/

    sudo service vsftpd restart
    此时用filezilla可以成功登录、下载、上传，116.62.63.204:6021 tutu329:jackseaver79
    如果外网filezilla可以成功登录、下载、上传，而pycharm连接不了ftp，应该是pycharm版本问题、需要用新版本

9、安装docker(生产环境中不要用非root账户运行docker)
    1)安装必要的证书并允许apt包管理器使用以下命令通过https使用存储库: sudo apt install apt-transport-https ca-certificates curl software-properties-common gnupg lsb-release
    2)添加Docker的官方GPG密钥: curl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo gpg --dearmor -o /usr/share/keyrings/docker-archive-keyring.gpg
    3)添加Docker官方库: sudo echo "deb [arch=$(dpkg --print-architecture) signed-by=/usr/share/keyrings/docker-archive-keyring.gpg] https://download.docker.com/linux/ubuntu $(lsb_release -cs) stable" | sudo tee /etc/apt/sources.list.d/docker.list > /dev/null
    4)更新Ubuntu源列表: sudo apt update
    5)安装Docker: sudo apt install docker-ce docker-ce-cli containerd.io docker-compose-plugin
    6)验证docker状态: systemctl status docker
    7)配置使Docker服务开机自启动: sudo systemctl enable docker
    8)查看docker版本: sudo docker version
    9)docker测试:
        sudo docker run hello-world
        sudo docker ps -a
    10)安装docker-compose:
        从github上下载docker-compose二进制文件安装:
            sudo curl -L "https://github.com/docker/compose/releases/download/v2.6.1/docker-compose-$(uname -s)-$(uname -m)" -o /usr/local/bin/docker-compose
        加可执行权限并移动到bin目录下:
            sudo chmod +x /usr/local/bin/docker-compose
            docker-compose -v
            此时docker-compose已经可用，可以在如Flowise/docker/下运行: sudo docker-compose up -d 或 sudo docker-compose stop
10、安装one-api
    git clone https://github.com/songquanpeng/one-api
    cd one-api
    sudo docker-compose up -d, 报错: invalid interpolation format for services.one-api.healthcheck.test.[]: "wget -q -O - http://localhost:3000/api/status | grep -o '\"success\":\\s*true' | awk -F: '{print $2}'". You may need to escape any $ with another $
        解决: docker-compose.yml中test这行改为, test: ["CMD-SHELL", "curl -s http://localhost:3000/api/status | tee /dev/stderr | grep '\"success\":\\s*true' || exit 1"]

11、安装梯子




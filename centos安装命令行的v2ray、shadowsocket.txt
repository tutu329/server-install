【v2ray客户端】
【测试v2ray客户端是否可以连接外网】
    0）sudo systemctl start v2ray
    1）curl -x http://localhost:7890 https://www.google.com
    2）curl -x http://localhost:7890 https://huggingface.co

【v2ray安装】
1、下载： https://github.com/v2fly/fhs-install-v2ray/blob/master/install-release.sh
2、conda create -n vpn python=3.10, conda create vpn
3、sudo bash install-release.sh (等待下载安装完成)
4、根据安装成功的信息查看配置文件位置：/usr/local/etc/v2ray/config.json
注意：
1）第五行（"protocol": "http",）指定"http"或者"socks"，指定socks时，后面设置要改为如：'socks5://127.0.0.1:7890'
2）这里只放了一个美国4节点。
【v2ray配置文件如下】
{
    "inbounds": [
        {
            "port": 7890,
            "protocol": "http",
            "settings": {
                "auth": "noauth",
                "udp": true
            }
        }
    ],
    "outbounds": [
        {
            "protocol": "vmess",
            "settings": {
                "vnext": [
                    {
                        "address": "node-1504.yh82l3dsytxzf8.com",
                        "port": 30030,
                        "users": [
                            {
                                "id": "6e812e27-24df-37a5-98b2-adbba6633c34",
                                "alterId": 0,
                                "security": "auto"
                            }
                        ]
                    }
                ]
            }
        },
        {
            "protocol": "freedom",
            "settings": {},
            "tag": "direct"
        }
    ],
    "routing": {
        "domainStrategy": "AsIs",
        "rules": [
            {
                "type": "field",
                "ip": [
                    "geoip:private"
                ],
                "outboundTag": "direct"
            }
        ]
    }
}

5、常用命令
设置自启动：sudo systemctl enable v2ray
启动：sudo systemctl start v2ray
关闭：sudo systemctl stop v2ray
查看端口情况：netstat -autn | grep 7890

export http_proxy="http://127.0.0.1:7890"
export https_proxy="http://127.0.0.1:7890"

git config --global http.proxy http://localhost:7890
git config --global https.proxy http://localhost:7890

git config --global --unset http.proxy
git config --global --unset https.proxy





【shadowsocks服务端（暂时没什么用）】
官网：https://github.com/shadowsocks/shadowsocks-libev
【注意，这个是在自己服务器上开一个shadowsocks服务，而不是作为client开梯子】
准备工作：
sudo yum install epel-release -y
sudo yum install gcc gettext autoconf libtool automake make pcre-devel asciidoc xmlto c-ares-devel libev-devel libsodium-devel mbedtls-devel -y

一、centos安装snap
yum install snapd
systemctl enable --now snapd.socket

二、安装shadowsocket
snap install shadowsocks-libev

三、建立ss的配置文件
vi /var/lib/snapd/snap/bin/config.json
{
    "server":"0.0.0.0",
    "server_port":30030,
    "local_port":7890,
    "password":"jackseaver79",
    "timeout":300,
    "method":"aes-256-cfb",
    "mode": "tcp_and_udp"
}

四、建立shadowsocks-libev的service单元配置文件
vi /lib/systemd/system/ss.service
[Unit]
Description=Shadowsocks Server
After=network.target

[Service]
Restart=on-abnormal
ExecStart=/var/lib/snapd/snap/bin/shadowsocks-libev.ss-server -c /var/lib/snapd/snap/bin/config.json > /dev/null 2>&1

[Install]
WantedBy=multi-user.target

五、设置开机启动shadowsocks-libev
systemctl daemon-reload
systemctl start ss.service
systemctl enable ss.service

六、防火墙开放shadowsocks-libev服务端口
sudo firewall-cmd --permanent --add-port=7890/tcp
sudo firewall-cmd --permanent --add-port=7890/udp
sudo firewall-cmd --reload
查看端口：sudo firewall-cmd --list-ports

七、常用命令
测试shadowsocks服务：/var/lib/snapd/snap/bin/shadowsocks-libev.ss-server -c /var/lib/snapd/snap/bin/config.json
查看服务器的端口占用情况：netstat -autn | grep 7890
重启服务：systemctl restart ss.service

查看状态：systemctl status ss.service
查看日志：journalctl -u shadowsocks-libev

查看ss占用那个端口:  ps ax |grep ss-server

查看日志：journalctl -u shadowsocks-libev
重启：systemctl restart shadowsocks-libev
停止shadowsocks-libev服务：systemctl stop ss.service
取消shadowsocks-libev开机自启：systemctl disable ss.service
升级shadowsocks-libev版本：snap refresh shadowsocks-libev
移除shadowsocks-libev应用（还需要手工清理上文第四节第五节涉及的配置文件）：snap remove shadowsocks-libev